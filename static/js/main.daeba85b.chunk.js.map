{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helper.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCreargasto","Nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuestos","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestorestante","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"2MAaeA,EAVD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OACI,uBAAGC,UAAU,4BAA4BD,ICsDlCE,EAvDE,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,mBAAmBC,EAAwC,EAAxCA,gBAAgBC,EAAwB,EAAxBA,mBAAwB,EAEtCC,mBAAS,GAF6B,mBAEnEC,EAFmE,KAEzDC,EAFyD,OAI9CF,oBAAS,GAJqC,mBAInEG,EAJmE,KAI5DC,EAJ4D,KAyB1E,OACI,kBAAC,WAAD,KACI,qDAECD,EAAQ,kBAAC,EAAD,CAAOT,QAAQ,iCAAoC,KAE5D,0BAAMW,SArBa,SAAAC,GACvBA,EAAEC,iBAECN,EAAU,GAAKO,MAAMP,GACpBG,GAAa,IAIjBA,GAAa,GAEbP,EAAmBI,GACnBH,EAAgBG,GAChBF,GAAmB,MAUX,2BACIU,KAAK,SACLd,UAAU,eACVe,YAAY,6BACZC,SA9BW,SAAAL,GACvBJ,EAAiBU,SAASN,EAAEO,OAAOC,MAAM,QA+BjC,2BACIL,KAAK,SACLd,UAAU,iBACVmB,MAAM,2B,gBCoCXC,EA5EI,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,aAAaC,EAAuB,EAAvBA,kBAAuB,EAErBjB,mBAAS,IAFY,mBAE9CkB,EAF8C,KAEtCC,EAFsC,OAIjBnB,mBAAS,GAJQ,mBAI7CC,EAJ6C,KAInCC,EAJmC,OAMvBF,oBAAS,GANc,mBAM9CG,EAN8C,KAMvCC,EANuC,KA+BrD,OACI,0BAAMC,SAxBW,SAAAC,GAGjB,GAFAA,EAAEC,iBAECN,EAAW,GAAKO,MAAMP,IAA+B,KAAlBiB,EAAOE,OACzChB,GAAa,OADjB,CAKAA,GAAa,GAEb,IAAMiB,EAAQ,CACVH,SACAjB,WACAqB,GAAGC,IAAQC,YAGfR,EAAaK,GACbJ,GAAkB,GAGlBE,EAAc,IACdjB,EAAgB,MAIZ,uDAEIC,EACE,kBAAC,EAAD,CAAOT,QAAQ,2DACf,KAEN,yBAAKC,UAAU,SACX,+CACA,2BACIc,KAAK,OACLd,UAAU,eACVe,YAAY,iBACZI,MAAOI,EACPP,SAAU,SAAAL,GAAC,OAAIa,EAAcb,EAAEO,OAAOC,WAG9C,yBAAKnB,UAAU,SACX,iDACA,2BACIc,KAAK,SACLd,UAAU,eACVe,YAAY,UACZI,MAAOb,EACPU,SAAU,SAAAL,GAAC,OAAIJ,EAAgBU,SAASN,EAAEO,OAAOC,MAAM,SAI/D,2BACIL,KAAK,SACLd,UAAU,8BACVmB,MAAM,oBClDPW,EAfD,SAAC,GAAa,IAAZJ,EAAW,EAAXA,MACZ,OACI,wBAAI1B,UAAU,UACV,2BACK0B,EAAMH,OACP,0BAAMvB,UAAU,SAAhB,KAA2B0B,EAAMpB,aCgBlCyB,EApBC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACd,OACI,yBAAKhC,UAAU,qBACX,uCAEIgC,EAAOC,KAAI,SAAAP,GAAK,OACZ,kBAAC,EAAD,CACIQ,IAAKR,EAAMC,GACXD,MAAOA,SCZlBS,EAAsB,SAACC,EAAaC,GAY7C,OATID,EAAY,EAAIC,EACV,qBAEDD,EAAY,EAAGC,EACd,sBAGA,uBCYCC,EAlBY,SAAC,GAA6B,IAA5BF,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACtC,OACI,kBAAC,WAAD,KACI,yBAAKrC,UAAU,uBAAf,kBACoBoC,GAEpB,yBAAKpC,UAAWmC,EAAoBC,EAAYC,IAAhD,eACiBA,KCqEdE,MA1Ef,WAAgB,IAAD,EAE6BlC,mBAAS,GAFtC,mBAEN+B,EAFM,KAEOlC,EAFP,OAIuBG,mBAAS,GAJhC,mBAINgC,EAJM,KAIIlC,EAJJ,OAMiCE,oBAAS,GAN1C,mBAMNmC,EANM,KAMWpC,EANX,OAQmBC,mBAAS,IAR5B,mBAQN2B,EARM,KAQGS,EARH,OAUepC,mBAAS,IAVxB,mBAUNqB,EAVM,KAUCL,EAVD,OAY0BhB,oBAAS,GAZnC,mBAYNqC,EAZM,KAYMpB,EAZN,KA6Bb,OAfAqB,qBAAU,WACR,GAAGD,EAAW,CACZD,EAAc,GAAD,mBACRT,GADQ,CAEXN,KAIF,IAAMkB,EAAsBP,EAASX,EAAMpB,SAC3CH,EAAgByC,GAChBtB,GAAkB,MAEnB,CAACI,EAAOgB,EAAWV,EAAOK,IAI3B,yBAAKrC,UAAU,aACb,gCACE,6CACA,yBAAKA,UAAU,iCAEXwC,EAGI,kBAAC,EAAD,CACEtC,mBAAoBA,EACpBC,gBAAiBA,EACjBC,mBAAoBA,IAKtB,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CACEqB,aAAcA,EACdC,kBAAmBA,KAGvB,yBAAKtB,UAAU,mBACb,kBAAC,EAAD,CACEgC,OAAQA,IAEV,kBAAC,EAAD,CACEI,YAAaA,EACbC,SAAUA,UCrDZQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArD,GACLsD,QAAQtD,MAAMA,EAAMuD,a","file":"static/js/main.daeba85b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (  \r\n        <p className=\"alert alert-danger error\">{mensaje}</p>\r\n    );\r\n} \r\n \r\nError.propTypes={\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React,{Fragment, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({guardarPresupuesto,guardarRestante,actualizarPregunta}) => {\r\n\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n\r\n    const [error, guardarError]=useState(false);\r\n\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad( parseInt(e.target.value,10));\r\n    }\r\n\r\n    const agregarPresupuesto = e =>{\r\n        e.preventDefault();\r\n\r\n        if(cantidad <1 || isNaN(cantidad)){ \r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return (  \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\r\n\r\n            <form onSubmit={agregarPresupuesto}>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto aqui\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n \r\nPregunta.propTypes={\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pregunta;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\n\r\nconst Formulario = ({guardarGasto,guardarCreargasto}) => {\r\n\r\n    const [Nombre, guardarNombre] = useState('');\r\n\r\n    const [ cantidad, guardarCantidad] =useState(0);\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        if(cantidad < 1 || isNaN(cantidad) || Nombre.trim() === ''){\r\n            guardarError(true);\r\n            return\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        const gasto = {\r\n            Nombre,\r\n            cantidad,\r\n            id:shortid.generate()\r\n        }\r\n\r\n        guardarGasto(gasto);\r\n        guardarCreargasto(true);\r\n\r\n        //resetear formulario\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n    }\r\n    return (  \r\n        <form onSubmit={agregarGasto}>\r\n            <h2>Agregar tus gastos aqui</h2>\r\n            {\r\n                error \r\n                ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto incorrecto\" /> \r\n                : null\r\n            }\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={Nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value,10))}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar gasto\"\r\n            />\r\n\r\n        </form>\r\n    );\r\n}\r\n \r\nFormulario.propTypes={\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCreargasto: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => {\r\n    return (  \r\n        <li className=\"gastos\">\r\n            <p>\r\n                {gasto.Nombre}\r\n                <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n            </p>\r\n        </li>\r\n    );\r\n}\r\n \r\nGasto.propTypes={\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => {\r\n    return (  \r\n        <div className=\"gastos-realizados\">\r\n            <h2>Listado</h2>\r\n            {\r\n                gastos.map(gasto=>(\r\n                    <Gasto\r\n                        key={gasto.id}\r\n                        gasto={gasto}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nListado.propTypes={\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Listado;","export const revisarPresupuestos = (presupuesto, restante) =>{\r\n    let clase;\r\n\r\n    if((presupuesto/4)> restante){\r\n        clase=\"alert alert-danger\";\r\n    }\r\n    else if((presupuesto/2)>restante){\r\n        clase=\"alert alert-warning\";\r\n    }\r\n    else{\r\n        clase=\"alert alert-success\";\r\n    }\r\n    return clase;\r\n}","import React, { Fragment } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {revisarPresupuestos} from '../helper';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return (  \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuestos(presupuesto,restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nControlPresupuesto.propTypes={\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ControlPresupuesto;","import React,{useState,useEffect} from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  const [presupuesto, guardarPresupuesto] = useState(0);\n\n  const [restante, guardarRestante] = useState(0);\n  //state para mostrar componentes\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\n\n  const [gastos , guardarGastos] =useState([]);\n\n  const [gasto, guardarGasto]=useState({});\n\n  const [creargasto, guardarCreargasto] =useState(false);\n\n  useEffect(() => {\n    if(creargasto){\n      guardarGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      //resta el presupuesto\n      const presupuestorestante = restante-gasto.cantidad;\n      guardarRestante(presupuestorestante);\n      guardarCreargasto(false);\n    }\n  }, [gasto, creargasto,gastos,restante])\n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {\n            mostrarpregunta\n            ?\n              (//return\n                <Pregunta \n                  guardarPresupuesto={guardarPresupuesto}\n                  guardarRestante={guardarRestante}\n                  actualizarPregunta={actualizarPregunta}\n                />\n              )\n            :\n              (//return\n                <div className=\"row\">\n                  <div className=\"one-half column\"> \n                    <Formulario \n                      guardarGasto={guardarGasto}\n                      guardarCreargasto={guardarCreargasto}\n                    />\n                  </div>\n                  <div className=\"one-half column\">\n                    <Listado \n                      gastos={gastos}\n                    />\n                    <ControlPresupuesto\n                      presupuesto={presupuesto}\n                      restante={restante}\n                    />\n\n                  </div>\n                </div>\n              )\n          }\n\n         \n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}